<h1>Current Schedule</h1>

<table id="vertical-1">
    <tr>
        <th>Monday</th>
        <td><%= @current_sch_readable['Monday'] %>
    </tr>
    <tr>
        <th>Tuesday</th>
        <td><%= @current_sch_readable['Tuesday'] %>
    </tr>
    <tr>
        <th>Wednesday</th>
        <td><%= @current_sch_readable['Wednesday'] %>
    </tr>
    <tr>
        <th>Thursday</th>
        <td><%= @current_sch_readable['Thursday'] %>
    </tr>
    <tr>
        <th>Friday</th>
        <td><%= @current_sch_readable['Friday'] %>
    </tr>
    <tr>
        <th>Saturday</th>
        <td><%= @current_sch_readable['Saturday'] %>
    </tr>
    <tr>
        <th>Sunday</th>
        <td><%= @current_sch_readable['Sunday'] %>
    </tr>
</table>
<%= link_to 'Edit', edit_driver_schedule_path(:id => @current_schedule[:id]) %>


<h1>Next Schedule</h1>
<table id="vertical-1">
    <tr>
        <th>Monday</th>
        <td><%= @next_sch_readable['Monday'] %>
    </tr>
    <tr>
        <th>Tuesday</th>
        <td><%= @next_sch_readable['Tuesday'] %>
    </tr>
    <tr>
        <th>Wednesday</th>
        <td><%= @next_sch_readable['Wednesday'] %>
    </tr>
    <tr>
        <th>Thursday</th>
        <td><%= @next_sch_readable['Thursday'] %>
    </tr>
    <tr>
        <th>Friday</th>
        <td><%= @next_sch_readable['Friday'] %>
    </tr>
    <tr>
        <th>Saturday</th>
        <td><%= @next_sch_readable['Saturday'] %>
    </tr>
    <tr>
        <th>Sunday</th>
        <td><%= @next_sch_readable['Sunday'] %>
    </tr>
</table>
<%= link_to 'Edit', edit_driver_schedule_path(:id => @next_schedule[:id]) %>
<p><%= link_to 'Back', url_for(:back) %></p>

<script>
    function getThisWeek(){
        var today = new Date()
        var day_of_week = today.getDay()
        if (!day_of_week) day_of_week = 7
        
        var start_of_week = new Date(Date.now() - ((day_of_week-1)*86400000))
        
        ret = []
        for (i=0; i < 7; i++){
            var d = new Date()
            d.setDate(start_of_week.getDate()+i)
            ret.push(d)
        }
        return ret // Returns an array of JS dates that correspond to the current day
    }
    
    function getNextWeek(){
        var today = new Date()
        var day_of_week = today.getDay()
        if (!day_of_weeek) day_of_week = 7
        
        var i = 0
        while (day_of_week < 8){
            day_of_week++
            i++
        }
        var start_of_week = new Date()
        start_of_week.setDate(today.getDate()+i)
        
        ret = []
        for (j=0; j<7; j++){
            var d = new Date()
            d.setDate(start_of_week.getDate()+i)
            ret.push(d)
        }
        return ret // Returns an array of JS dates that correspond to the week coming after the current day
    }
    
    function displayDay(day){
        options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }
        document.write(day.toLocaleDateString("en-US", options))
    }
    
    function displayWeek(week){
        week.forEach(displayDay)
    }
</script>
